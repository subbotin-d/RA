package ws02

//TODO 2.1 Релизовать 2 класса, которые представляют собой "вектор" https://ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%BA%D1%82%D0%BE%D1%80_(%D0%B3%D0%B5%D0%BE%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%8F)
// Первый класс должен представлять из себя трехмерный вектор (Vector3)
// Второй класс должен представлять из себя N-мерный вектор (Vector)
// /
// /
// У объектов каждого из классов должны быть доступны свойства x,y,z для трехмерного и x1, x2, x3, x4 и т.д. для N-мерного
// /
// /
// Должны быть реализованы конструкторы:
// 1. Конструктор "По умолчанию". Создает вектор, у которого все компоненты содержат нули (для N-мерного вектора, конструктор "по умолчанию" должен принимать размер)
// 2. Конструктор, который позволяет создать объект с указанием 3-х компонент для трехмерного и N компонент N-мерного (можно использовать vararg для N-мерного)
// /
// /
// Реализовать операции, которые доступны с векторами:
// 1. Опеределение длиный вектора (вычисляется как квадратный корень из суммы квадратов всех компонент)
// 2. Сложение и вычитание двух векторов (вычисляется как сумма/разность соответствующих координат вектора)
// 3. Скалярное произведение двух векторов
// 4. Умножение вектора на число
// 5. Вычисление косинуса между двумя векторами
// 6. Добавление/удаление элемента
// В реализации необходимо учесть что количество координат у N-мерного вектора может различаться, в этом случае
//   необходимо кидать иксключение IllegalArgumentException - (см. https://kotlinlang.org/docs/exceptions.html оператор "throw")

//TODO 2.2 *** Реализовать механизм сравнения(исключая равенство) двух векторов по длине. (Пример использования: vector1 < vector2)
// См. https://kotlinlang.org/docs/operator-overloading.html#comparison-operators

//TODO 2.3 *** Создать список векторов и отсортировать их в порядке возрастания с помощью метода списка sorted() (list.sorted())
// Tip. Необходимо реализовать интерфейс Comparable<Vector> / Comparable<Vector3>